package src.duoxiancheng;

/**
 * 多线程的细节
 *  1.sleep 和wait 的异同点
 *      相同点: 可以让线程出入冻结状态;
 *      1. sleep: 必须指定时间
 *         wait(): 可以指定时间 也可以不指定实现,
 *      2. sleep(): 时间到,线程处于临时阻塞. 运行状态
 *         wait(): 如果没有时间 必须通过notify / notifyAll 唤醒
 *      3. slee 不一定非要定义在同步中
 *         wait 必须定义在同步中
 *      4. 都定义在同步中
 *          线程执行到sleep, 不会释放锁
 *          线程执行到wait, 会释放锁
 *  2. 线程如何停止
 *      不再使用 stop()
 *      线程一般在循环中执行; 循环结束 run结束
 *      run 方法怎么结束?
 *      只要控制循环即结束
 *
 *      注意: 万一线程在任务中处于冻结状态,那么它还能判断标记吗?
 *      不能
 *
 *      如果目标线程等待很长时间,则应使用 interrupt 方法中断该等待
 *
 *      中断线程 !=停止线程
 *
 *      interrupt 功能 是将线程冻结的状态清除
 *      让线程恢复到运行状态(让线程重新具备cpu的执行资格)
 *
 *      因为是强制性 所以会有异常发生 可以在catch中捕获异常
 *      在异常处理中 改变标记让循环结束 让run结束
 *
 *  3. 守护线程: 后台线程(一般创建的都是前台的线程)
 *
 */
// 停止线程演示;
public class duoxiancheng7 {
}
